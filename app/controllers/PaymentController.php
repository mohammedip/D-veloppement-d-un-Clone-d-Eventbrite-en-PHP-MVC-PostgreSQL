<?php

namespace App\Controllers;

use Stripe\Stripe;
use Stripe\Charge;
use Stripe\Exception\ApiErrorException;

class PaymentController {

    public function checkout() {
        // Existing Stripe Checkout redirection logic (no change needed)
        $stripeConfig = include __DIR__ . '/../config/stripe.php';
        \Stripe\Stripe::setApiKey($stripeConfig['secret_key']);

        try {
            $session = \Stripe\Checkout\Session::create([
                'payment_method_types' => ['card'],
                'line_items' => [
                    [
                        'price_data' => [
                            'currency' => 'usd',
                            'product_data' => [
                                'name' => 'Sample Product',
                            ],
                            'unit_amount' => 5000, 
                        ],
                        'quantity' => 1,
                    ],
                ],
                'mode' => 'payment',
                'success_url' => 'http://localhost/AAAA-Eventbrite-Clone/success',
                'cancel_url' => 'http://localhost/AAAA-Eventbrite-Clone/cancel',
            ]);

            header("Location: " . $session->url);
            exit();
        } catch (\Exception $e) {
            echo 'Error creating Stripe session: ' . $e->getMessage();
        }
    }

    public function handleDirectPayment() {
        $stripeConfig = include __DIR__ . '/../config/stripe.php';
        Stripe::setApiKey($stripeConfig['secret_key']);
    
        // Get JSON data sent from frontend
        $data = json_decode(file_get_contents('php://input'), true);
        $token = $data['token']; // Token generated by Stripe Elements
    
        try {
            $charge = Charge::create([
                'amount' => 5000, // Amount in cents
                'currency' => 'usd',
                'description' => 'Sample Product',
                'source' => $token, // Token from frontend
            ]);
    
            echo json_encode(['success' => true]);
        } catch (ApiErrorException $e) {
            echo json_encode(['success' => false, 'error' => $e->getMessage()]);
        }
    }
    
}
